Terminals unused in grammar

   ENDIF
   RIGHT
   LEFT
   MOVE
   ENDWHILE
   COMMENT


State 25 conflicts: 1 shift/reduce
State 30 conflicts: 1 shift/reduce
State 62 conflicts: 1 shift/reduce
State 63 conflicts: 1 shift/reduce
State 64 conflicts: 1 shift/reduce
State 65 conflicts: 1 shift/reduce
State 66 conflicts: 5 shift/reduce


Grammar

    0 $accept: input $end

    1 input: /* empty */
    2      | input command

    3 command: if
    4        | loop
    5        | def
    6        | exec
    7        | PRINT exp ';'
    8        | PRINT VAR ';'
    9        | PRINT STRING ';'
   10        | SET VAR ASSIGN exp ';'
   11        | SET GLOBAL VAR ASSIGN exp ';'
   12        | SET VAR ASSIGN STRING ';'
   13        | SET GLOBAL VAR ASSIGN STRING ';'

   14 $@1: /* empty */

   15 if: IF cond ':' $@1 BEGIN_BLOCK input END_BLOCK

   16 $@2: /* empty */

   17 $@3: /* empty */

   18 if: IF cond '~' $@2 BEGIN_BLOCK input END_BLOCK ELSE $@3 BEGIN_BLOCK input END_BLOCK

   19 $@4: /* empty */

   20 loop: LOOP cond ':' $@4 BEGIN_BLOCK input END_BLOCK

   21 $@5: /* empty */

   22 def: PDEF name ':' name $@5 BEGIN_BLOCK input END_BLOCK

   23 $@6: /* empty */

   24 def: PDEF name ':' name ',' name $@6 BEGIN_BLOCK input END_BLOCK

   25 name: VAR

   26 exec: EXEC name ASSIGN NUM ';'
   27     | EXEC name ASSIGN FLOAT ';'
   28     | EXEC name ASSIGN VAR ';'
   29     | EXEC name ASSIGN NUM ',' NUM ';'
   30     | EXEC name ASSIGN FLOAT ',' FLOAT ';'
   31     | EXEC name ASSIGN VAR ',' VAR ';'

   32 cond: exp NEQ exp
   33     | exp EQ exp
   34     | exp GT exp
   35     | exp LE exp
   36     | exp GEQ exp
   37     | exp LEQ exp

   38 exp: NUM
   39    | FLOAT
   40    | VAR
   41    | exp '+' exp
   42    | exp '-' exp
   43    | '-' exp
   44    | exp '*' exp
   45    | exp '/' exp
   46    | exp '%' exp
   47    | '(' exp ')'


Terminals, with rules where they appear

$end (0) 0
'%' (37) 46
'(' (40) 47
')' (41) 47
'*' (42) 44
'+' (43) 41
',' (44) 24 29 30 31
'-' (45) 42 43
'/' (47) 45
':' (58) 15 20 22 24
';' (59) 7 8 9 10 11 12 13 26 27 28 29 30 31
'~' (126) 18
error (256)
IF (258) 15 18
STRING (259) 9 12 13
BEGIN_BLOCK (260) 15 18 20 22 24
END_BLOCK (261) 15 18 20 22 24
PDEF (262) 22 24
ELSE (263) 18
ENDIF (264)
RIGHT (265)
LEFT (266)
MOVE (267)
LOOP (268) 20
ENDWHILE (269)
PRINT (270) 7 8 9
SET (271) 10 11 12 13
ASSIGN (272) 10 11 12 13 26 27 28 29 30 31
EXEC (273) 26 27 28 29 30 31
GLOBAL (274) 11 13
COMMENT (275)
VAR (276) 8 10 11 12 13 25 28 31 40
NUM (277) 26 29 38
FLOAT (278) 27 30 39
NEQ (279) 32
EQ (280) 33
GT (281) 34
LE (282) 35
GEQ (283) 36
LEQ (284) 37


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
input (42)
    on left: 1 2, on right: 0 2 15 18 20 22 24
command (43)
    on left: 3 4 5 6 7 8 9 10 11 12 13, on right: 2
if (44)
    on left: 15 18, on right: 3
$@1 (45)
    on left: 14, on right: 15
$@2 (46)
    on left: 16, on right: 18
$@3 (47)
    on left: 17, on right: 18
loop (48)
    on left: 20, on right: 4
$@4 (49)
    on left: 19, on right: 20
def (50)
    on left: 22 24, on right: 5
$@5 (51)
    on left: 21, on right: 22
$@6 (52)
    on left: 23, on right: 24
name (53)
    on left: 25, on right: 22 24 26 27 28 29 30 31
exec (54)
    on left: 26 27 28 29 30 31, on right: 6
cond (55)
    on left: 32 33 34 35 36 37, on right: 15 18 20
exp (56)
    on left: 38 39 40 41 42 43 44 45 46 47, on right: 7 10 11 32 33
    34 35 36 37 41 42 43 44 45 46 47


state 0

    0 $accept: . input $end

    $default  reduce using rule 1 (input)

    input  go to state 1


state 1

    0 $accept: input . $end
    2 input: input . command

    $end   shift, and go to state 2
    IF     shift, and go to state 3
    PDEF   shift, and go to state 4
    LOOP   shift, and go to state 5
    PRINT  shift, and go to state 6
    SET    shift, and go to state 7
    EXEC   shift, and go to state 8

    command  go to state 9
    if       go to state 10
    loop     go to state 11
    def      go to state 12
    exec     go to state 13


state 2

    0 $accept: input $end .

    $default  accept


state 3

   15 if: IF . cond ':' $@1 BEGIN_BLOCK input END_BLOCK
   18   | IF . cond '~' $@2 BEGIN_BLOCK input END_BLOCK ELSE $@3 BEGIN_BLOCK input END_BLOCK

    VAR    shift, and go to state 14
    NUM    shift, and go to state 15
    FLOAT  shift, and go to state 16
    '-'    shift, and go to state 17
    '('    shift, and go to state 18

    cond  go to state 19
    exp   go to state 20


state 4

   22 def: PDEF . name ':' name $@5 BEGIN_BLOCK input END_BLOCK
   24    | PDEF . name ':' name ',' name $@6 BEGIN_BLOCK input END_BLOCK

    VAR  shift, and go to state 21

    name  go to state 22


state 5

   20 loop: LOOP . cond ':' $@4 BEGIN_BLOCK input END_BLOCK

    VAR    shift, and go to state 14
    NUM    shift, and go to state 15
    FLOAT  shift, and go to state 16
    '-'    shift, and go to state 17
    '('    shift, and go to state 18

    cond  go to state 23
    exp   go to state 20


state 6

    7 command: PRINT . exp ';'
    8        | PRINT . VAR ';'
    9        | PRINT . STRING ';'

    STRING  shift, and go to state 24
    VAR     shift, and go to state 25
    NUM     shift, and go to state 15
    FLOAT   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18

    exp  go to state 26


state 7

   10 command: SET . VAR ASSIGN exp ';'
   11        | SET . GLOBAL VAR ASSIGN exp ';'
   12        | SET . VAR ASSIGN STRING ';'
   13        | SET . GLOBAL VAR ASSIGN STRING ';'

    GLOBAL  shift, and go to state 27
    VAR     shift, and go to state 28


state 8

   26 exec: EXEC . name ASSIGN NUM ';'
   27     | EXEC . name ASSIGN FLOAT ';'
   28     | EXEC . name ASSIGN VAR ';'
   29     | EXEC . name ASSIGN NUM ',' NUM ';'
   30     | EXEC . name ASSIGN FLOAT ',' FLOAT ';'
   31     | EXEC . name ASSIGN VAR ',' VAR ';'

    VAR  shift, and go to state 21

    name  go to state 29


state 9

    2 input: input command .

    $default  reduce using rule 2 (input)


state 10

    3 command: if .

    $default  reduce using rule 3 (command)


state 11

    4 command: loop .

    $default  reduce using rule 4 (command)


state 12

    5 command: def .

    $default  reduce using rule 5 (command)


state 13

    6 command: exec .

    $default  reduce using rule 6 (command)


state 14

   40 exp: VAR .

    $default  reduce using rule 40 (exp)


state 15

   38 exp: NUM .

    $default  reduce using rule 38 (exp)


state 16

   39 exp: FLOAT .

    $default  reduce using rule 39 (exp)


state 17

   43 exp: '-' . exp

    VAR    shift, and go to state 14
    NUM    shift, and go to state 15
    FLOAT  shift, and go to state 16
    '-'    shift, and go to state 17
    '('    shift, and go to state 18

    exp  go to state 30


state 18

   47 exp: '(' . exp ')'

    VAR    shift, and go to state 14
    NUM    shift, and go to state 15
    FLOAT  shift, and go to state 16
    '-'    shift, and go to state 17
    '('    shift, and go to state 18

    exp  go to state 31


state 19

   15 if: IF cond . ':' $@1 BEGIN_BLOCK input END_BLOCK
   18   | IF cond . '~' $@2 BEGIN_BLOCK input END_BLOCK ELSE $@3 BEGIN_BLOCK input END_BLOCK

    ':'  shift, and go to state 32
    '~'  shift, and go to state 33


state 20

   32 cond: exp . NEQ exp
   33     | exp . EQ exp
   34     | exp . GT exp
   35     | exp . LE exp
   36     | exp . GEQ exp
   37     | exp . LEQ exp
   41 exp: exp . '+' exp
   42    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp
   46    | exp . '%' exp

    NEQ  shift, and go to state 34
    EQ   shift, and go to state 35
    GT   shift, and go to state 36
    LE   shift, and go to state 37
    GEQ  shift, and go to state 38
    LEQ  shift, and go to state 39
    '-'  shift, and go to state 40
    '+'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    '%'  shift, and go to state 44


state 21

   25 name: VAR .

    $default  reduce using rule 25 (name)


state 22

   22 def: PDEF name . ':' name $@5 BEGIN_BLOCK input END_BLOCK
   24    | PDEF name . ':' name ',' name $@6 BEGIN_BLOCK input END_BLOCK

    ':'  shift, and go to state 45


state 23

   20 loop: LOOP cond . ':' $@4 BEGIN_BLOCK input END_BLOCK

    ':'  shift, and go to state 46


state 24

    9 command: PRINT STRING . ';'

    ';'  shift, and go to state 47


state 25

    8 command: PRINT VAR . ';'
   40 exp: VAR .

    ';'  shift, and go to state 48

    ';'       [reduce using rule 40 (exp)]
    $default  reduce using rule 40 (exp)


state 26

    7 command: PRINT exp . ';'
   41 exp: exp . '+' exp
   42    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp
   46    | exp . '%' exp

    '-'  shift, and go to state 40
    '+'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    ';'  shift, and go to state 49
    '%'  shift, and go to state 44


state 27

   11 command: SET GLOBAL . VAR ASSIGN exp ';'
   13        | SET GLOBAL . VAR ASSIGN STRING ';'

    VAR  shift, and go to state 50


state 28

   10 command: SET VAR . ASSIGN exp ';'
   12        | SET VAR . ASSIGN STRING ';'

    ASSIGN  shift, and go to state 51


state 29

   26 exec: EXEC name . ASSIGN NUM ';'
   27     | EXEC name . ASSIGN FLOAT ';'
   28     | EXEC name . ASSIGN VAR ';'
   29     | EXEC name . ASSIGN NUM ',' NUM ';'
   30     | EXEC name . ASSIGN FLOAT ',' FLOAT ';'
   31     | EXEC name . ASSIGN VAR ',' VAR ';'

    ASSIGN  shift, and go to state 52


state 30

   41 exp: exp . '+' exp
   42    | exp . '-' exp
   43    | '-' exp .
   44    | exp . '*' exp
   45    | exp . '/' exp
   46    | exp . '%' exp

    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    '%'  shift, and go to state 44

    '%'       [reduce using rule 43 (exp)]
    $default  reduce using rule 43 (exp)


state 31

   41 exp: exp . '+' exp
   42    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp
   46    | exp . '%' exp
   47    | '(' exp . ')'

    '-'  shift, and go to state 40
    '+'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    '%'  shift, and go to state 44
    ')'  shift, and go to state 53


state 32

   15 if: IF cond ':' . $@1 BEGIN_BLOCK input END_BLOCK

    $default  reduce using rule 14 ($@1)

    $@1  go to state 54


state 33

   18 if: IF cond '~' . $@2 BEGIN_BLOCK input END_BLOCK ELSE $@3 BEGIN_BLOCK input END_BLOCK

    $default  reduce using rule 16 ($@2)

    $@2  go to state 55


state 34

   32 cond: exp NEQ . exp

    VAR    shift, and go to state 14
    NUM    shift, and go to state 15
    FLOAT  shift, and go to state 16
    '-'    shift, and go to state 17
    '('    shift, and go to state 18

    exp  go to state 56


state 35

   33 cond: exp EQ . exp

    VAR    shift, and go to state 14
    NUM    shift, and go to state 15
    FLOAT  shift, and go to state 16
    '-'    shift, and go to state 17
    '('    shift, and go to state 18

    exp  go to state 57


state 36

   34 cond: exp GT . exp

    VAR    shift, and go to state 14
    NUM    shift, and go to state 15
    FLOAT  shift, and go to state 16
    '-'    shift, and go to state 17
    '('    shift, and go to state 18

    exp  go to state 58


state 37

   35 cond: exp LE . exp

    VAR    shift, and go to state 14
    NUM    shift, and go to state 15
    FLOAT  shift, and go to state 16
    '-'    shift, and go to state 17
    '('    shift, and go to state 18

    exp  go to state 59


state 38

   36 cond: exp GEQ . exp

    VAR    shift, and go to state 14
    NUM    shift, and go to state 15
    FLOAT  shift, and go to state 16
    '-'    shift, and go to state 17
    '('    shift, and go to state 18

    exp  go to state 60


state 39

   37 cond: exp LEQ . exp

    VAR    shift, and go to state 14
    NUM    shift, and go to state 15
    FLOAT  shift, and go to state 16
    '-'    shift, and go to state 17
    '('    shift, and go to state 18

    exp  go to state 61


state 40

   42 exp: exp '-' . exp

    VAR    shift, and go to state 14
    NUM    shift, and go to state 15
    FLOAT  shift, and go to state 16
    '-'    shift, and go to state 17
    '('    shift, and go to state 18

    exp  go to state 62


state 41

   41 exp: exp '+' . exp

    VAR    shift, and go to state 14
    NUM    shift, and go to state 15
    FLOAT  shift, and go to state 16
    '-'    shift, and go to state 17
    '('    shift, and go to state 18

    exp  go to state 63


state 42

   44 exp: exp '*' . exp

    VAR    shift, and go to state 14
    NUM    shift, and go to state 15
    FLOAT  shift, and go to state 16
    '-'    shift, and go to state 17
    '('    shift, and go to state 18

    exp  go to state 64


state 43

   45 exp: exp '/' . exp

    VAR    shift, and go to state 14
    NUM    shift, and go to state 15
    FLOAT  shift, and go to state 16
    '-'    shift, and go to state 17
    '('    shift, and go to state 18

    exp  go to state 65


state 44

   46 exp: exp '%' . exp

    VAR    shift, and go to state 14
    NUM    shift, and go to state 15
    FLOAT  shift, and go to state 16
    '-'    shift, and go to state 17
    '('    shift, and go to state 18

    exp  go to state 66


state 45

   22 def: PDEF name ':' . name $@5 BEGIN_BLOCK input END_BLOCK
   24    | PDEF name ':' . name ',' name $@6 BEGIN_BLOCK input END_BLOCK

    VAR  shift, and go to state 21

    name  go to state 67


state 46

   20 loop: LOOP cond ':' . $@4 BEGIN_BLOCK input END_BLOCK

    $default  reduce using rule 19 ($@4)

    $@4  go to state 68


state 47

    9 command: PRINT STRING ';' .

    $default  reduce using rule 9 (command)


state 48

    8 command: PRINT VAR ';' .

    $default  reduce using rule 8 (command)


state 49

    7 command: PRINT exp ';' .

    $default  reduce using rule 7 (command)


state 50

   11 command: SET GLOBAL VAR . ASSIGN exp ';'
   13        | SET GLOBAL VAR . ASSIGN STRING ';'

    ASSIGN  shift, and go to state 69


state 51

   10 command: SET VAR ASSIGN . exp ';'
   12        | SET VAR ASSIGN . STRING ';'

    STRING  shift, and go to state 70
    VAR     shift, and go to state 14
    NUM     shift, and go to state 15
    FLOAT   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18

    exp  go to state 71


state 52

   26 exec: EXEC name ASSIGN . NUM ';'
   27     | EXEC name ASSIGN . FLOAT ';'
   28     | EXEC name ASSIGN . VAR ';'
   29     | EXEC name ASSIGN . NUM ',' NUM ';'
   30     | EXEC name ASSIGN . FLOAT ',' FLOAT ';'
   31     | EXEC name ASSIGN . VAR ',' VAR ';'

    VAR    shift, and go to state 72
    NUM    shift, and go to state 73
    FLOAT  shift, and go to state 74


state 53

   47 exp: '(' exp ')' .

    $default  reduce using rule 47 (exp)


state 54

   15 if: IF cond ':' $@1 . BEGIN_BLOCK input END_BLOCK

    BEGIN_BLOCK  shift, and go to state 75


state 55

   18 if: IF cond '~' $@2 . BEGIN_BLOCK input END_BLOCK ELSE $@3 BEGIN_BLOCK input END_BLOCK

    BEGIN_BLOCK  shift, and go to state 76


state 56

   32 cond: exp NEQ exp .
   41 exp: exp . '+' exp
   42    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp
   46    | exp . '%' exp

    '-'  shift, and go to state 40
    '+'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    '%'  shift, and go to state 44

    $default  reduce using rule 32 (cond)


state 57

   33 cond: exp EQ exp .
   41 exp: exp . '+' exp
   42    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp
   46    | exp . '%' exp

    '-'  shift, and go to state 40
    '+'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    '%'  shift, and go to state 44

    $default  reduce using rule 33 (cond)


state 58

   34 cond: exp GT exp .
   41 exp: exp . '+' exp
   42    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp
   46    | exp . '%' exp

    '-'  shift, and go to state 40
    '+'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    '%'  shift, and go to state 44

    $default  reduce using rule 34 (cond)


state 59

   35 cond: exp LE exp .
   41 exp: exp . '+' exp
   42    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp
   46    | exp . '%' exp

    '-'  shift, and go to state 40
    '+'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    '%'  shift, and go to state 44

    $default  reduce using rule 35 (cond)


state 60

   36 cond: exp GEQ exp .
   41 exp: exp . '+' exp
   42    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp
   46    | exp . '%' exp

    '-'  shift, and go to state 40
    '+'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    '%'  shift, and go to state 44

    $default  reduce using rule 36 (cond)


state 61

   37 cond: exp LEQ exp .
   41 exp: exp . '+' exp
   42    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp
   46    | exp . '%' exp

    '-'  shift, and go to state 40
    '+'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    '%'  shift, and go to state 44

    $default  reduce using rule 37 (cond)


state 62

   41 exp: exp . '+' exp
   42    | exp . '-' exp
   42    | exp '-' exp .
   44    | exp . '*' exp
   45    | exp . '/' exp
   46    | exp . '%' exp

    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    '%'  shift, and go to state 44

    '%'       [reduce using rule 42 (exp)]
    $default  reduce using rule 42 (exp)


state 63

   41 exp: exp . '+' exp
   41    | exp '+' exp .
   42    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp
   46    | exp . '%' exp

    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    '%'  shift, and go to state 44

    '%'       [reduce using rule 41 (exp)]
    $default  reduce using rule 41 (exp)


state 64

   41 exp: exp . '+' exp
   42    | exp . '-' exp
   44    | exp . '*' exp
   44    | exp '*' exp .
   45    | exp . '/' exp
   46    | exp . '%' exp

    '%'  shift, and go to state 44

    '%'       [reduce using rule 44 (exp)]
    $default  reduce using rule 44 (exp)


state 65

   41 exp: exp . '+' exp
   42    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp
   45    | exp '/' exp .
   46    | exp . '%' exp

    '%'  shift, and go to state 44

    '%'       [reduce using rule 45 (exp)]
    $default  reduce using rule 45 (exp)


state 66

   41 exp: exp . '+' exp
   42    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp
   46    | exp . '%' exp
   46    | exp '%' exp .

    '-'  shift, and go to state 40
    '+'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    '%'  shift, and go to state 44

    '-'       [reduce using rule 46 (exp)]
    '+'       [reduce using rule 46 (exp)]
    '*'       [reduce using rule 46 (exp)]
    '/'       [reduce using rule 46 (exp)]
    '%'       [reduce using rule 46 (exp)]
    $default  reduce using rule 46 (exp)


state 67

   22 def: PDEF name ':' name . $@5 BEGIN_BLOCK input END_BLOCK
   24    | PDEF name ':' name . ',' name $@6 BEGIN_BLOCK input END_BLOCK

    ','  shift, and go to state 77

    $default  reduce using rule 21 ($@5)

    $@5  go to state 78


state 68

   20 loop: LOOP cond ':' $@4 . BEGIN_BLOCK input END_BLOCK

    BEGIN_BLOCK  shift, and go to state 79


state 69

   11 command: SET GLOBAL VAR ASSIGN . exp ';'
   13        | SET GLOBAL VAR ASSIGN . STRING ';'

    STRING  shift, and go to state 80
    VAR     shift, and go to state 14
    NUM     shift, and go to state 15
    FLOAT   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18

    exp  go to state 81


state 70

   12 command: SET VAR ASSIGN STRING . ';'

    ';'  shift, and go to state 82


state 71

   10 command: SET VAR ASSIGN exp . ';'
   41 exp: exp . '+' exp
   42    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp
   46    | exp . '%' exp

    '-'  shift, and go to state 40
    '+'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    ';'  shift, and go to state 83
    '%'  shift, and go to state 44


state 72

   28 exec: EXEC name ASSIGN VAR . ';'
   31     | EXEC name ASSIGN VAR . ',' VAR ';'

    ';'  shift, and go to state 84
    ','  shift, and go to state 85


state 73

   26 exec: EXEC name ASSIGN NUM . ';'
   29     | EXEC name ASSIGN NUM . ',' NUM ';'

    ';'  shift, and go to state 86
    ','  shift, and go to state 87


state 74

   27 exec: EXEC name ASSIGN FLOAT . ';'
   30     | EXEC name ASSIGN FLOAT . ',' FLOAT ';'

    ';'  shift, and go to state 88
    ','  shift, and go to state 89


state 75

   15 if: IF cond ':' $@1 BEGIN_BLOCK . input END_BLOCK

    $default  reduce using rule 1 (input)

    input  go to state 90


state 76

   18 if: IF cond '~' $@2 BEGIN_BLOCK . input END_BLOCK ELSE $@3 BEGIN_BLOCK input END_BLOCK

    $default  reduce using rule 1 (input)

    input  go to state 91


state 77

   24 def: PDEF name ':' name ',' . name $@6 BEGIN_BLOCK input END_BLOCK

    VAR  shift, and go to state 21

    name  go to state 92


state 78

   22 def: PDEF name ':' name $@5 . BEGIN_BLOCK input END_BLOCK

    BEGIN_BLOCK  shift, and go to state 93


state 79

   20 loop: LOOP cond ':' $@4 BEGIN_BLOCK . input END_BLOCK

    $default  reduce using rule 1 (input)

    input  go to state 94


state 80

   13 command: SET GLOBAL VAR ASSIGN STRING . ';'

    ';'  shift, and go to state 95


state 81

   11 command: SET GLOBAL VAR ASSIGN exp . ';'
   41 exp: exp . '+' exp
   42    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp
   46    | exp . '%' exp

    '-'  shift, and go to state 40
    '+'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    ';'  shift, and go to state 96
    '%'  shift, and go to state 44


state 82

   12 command: SET VAR ASSIGN STRING ';' .

    $default  reduce using rule 12 (command)


state 83

   10 command: SET VAR ASSIGN exp ';' .

    $default  reduce using rule 10 (command)


state 84

   28 exec: EXEC name ASSIGN VAR ';' .

    $default  reduce using rule 28 (exec)


state 85

   31 exec: EXEC name ASSIGN VAR ',' . VAR ';'

    VAR  shift, and go to state 97


state 86

   26 exec: EXEC name ASSIGN NUM ';' .

    $default  reduce using rule 26 (exec)


state 87

   29 exec: EXEC name ASSIGN NUM ',' . NUM ';'

    NUM  shift, and go to state 98


state 88

   27 exec: EXEC name ASSIGN FLOAT ';' .

    $default  reduce using rule 27 (exec)


state 89

   30 exec: EXEC name ASSIGN FLOAT ',' . FLOAT ';'

    FLOAT  shift, and go to state 99


state 90

    2 input: input . command
   15 if: IF cond ':' $@1 BEGIN_BLOCK input . END_BLOCK

    IF         shift, and go to state 3
    END_BLOCK  shift, and go to state 100
    PDEF       shift, and go to state 4
    LOOP       shift, and go to state 5
    PRINT      shift, and go to state 6
    SET        shift, and go to state 7
    EXEC       shift, and go to state 8

    command  go to state 9
    if       go to state 10
    loop     go to state 11
    def      go to state 12
    exec     go to state 13


state 91

    2 input: input . command
   18 if: IF cond '~' $@2 BEGIN_BLOCK input . END_BLOCK ELSE $@3 BEGIN_BLOCK input END_BLOCK

    IF         shift, and go to state 3
    END_BLOCK  shift, and go to state 101
    PDEF       shift, and go to state 4
    LOOP       shift, and go to state 5
    PRINT      shift, and go to state 6
    SET        shift, and go to state 7
    EXEC       shift, and go to state 8

    command  go to state 9
    if       go to state 10
    loop     go to state 11
    def      go to state 12
    exec     go to state 13


state 92

   24 def: PDEF name ':' name ',' name . $@6 BEGIN_BLOCK input END_BLOCK

    $default  reduce using rule 23 ($@6)

    $@6  go to state 102


state 93

   22 def: PDEF name ':' name $@5 BEGIN_BLOCK . input END_BLOCK

    $default  reduce using rule 1 (input)

    input  go to state 103


state 94

    2 input: input . command
   20 loop: LOOP cond ':' $@4 BEGIN_BLOCK input . END_BLOCK

    IF         shift, and go to state 3
    END_BLOCK  shift, and go to state 104
    PDEF       shift, and go to state 4
    LOOP       shift, and go to state 5
    PRINT      shift, and go to state 6
    SET        shift, and go to state 7
    EXEC       shift, and go to state 8

    command  go to state 9
    if       go to state 10
    loop     go to state 11
    def      go to state 12
    exec     go to state 13


state 95

   13 command: SET GLOBAL VAR ASSIGN STRING ';' .

    $default  reduce using rule 13 (command)


state 96

   11 command: SET GLOBAL VAR ASSIGN exp ';' .

    $default  reduce using rule 11 (command)


state 97

   31 exec: EXEC name ASSIGN VAR ',' VAR . ';'

    ';'  shift, and go to state 105


state 98

   29 exec: EXEC name ASSIGN NUM ',' NUM . ';'

    ';'  shift, and go to state 106


state 99

   30 exec: EXEC name ASSIGN FLOAT ',' FLOAT . ';'

    ';'  shift, and go to state 107


state 100

   15 if: IF cond ':' $@1 BEGIN_BLOCK input END_BLOCK .

    $default  reduce using rule 15 (if)


state 101

   18 if: IF cond '~' $@2 BEGIN_BLOCK input END_BLOCK . ELSE $@3 BEGIN_BLOCK input END_BLOCK

    ELSE  shift, and go to state 108


state 102

   24 def: PDEF name ':' name ',' name $@6 . BEGIN_BLOCK input END_BLOCK

    BEGIN_BLOCK  shift, and go to state 109


state 103

    2 input: input . command
   22 def: PDEF name ':' name $@5 BEGIN_BLOCK input . END_BLOCK

    IF         shift, and go to state 3
    END_BLOCK  shift, and go to state 110
    PDEF       shift, and go to state 4
    LOOP       shift, and go to state 5
    PRINT      shift, and go to state 6
    SET        shift, and go to state 7
    EXEC       shift, and go to state 8

    command  go to state 9
    if       go to state 10
    loop     go to state 11
    def      go to state 12
    exec     go to state 13


state 104

   20 loop: LOOP cond ':' $@4 BEGIN_BLOCK input END_BLOCK .

    $default  reduce using rule 20 (loop)


state 105

   31 exec: EXEC name ASSIGN VAR ',' VAR ';' .

    $default  reduce using rule 31 (exec)


state 106

   29 exec: EXEC name ASSIGN NUM ',' NUM ';' .

    $default  reduce using rule 29 (exec)


state 107

   30 exec: EXEC name ASSIGN FLOAT ',' FLOAT ';' .

    $default  reduce using rule 30 (exec)


state 108

   18 if: IF cond '~' $@2 BEGIN_BLOCK input END_BLOCK ELSE . $@3 BEGIN_BLOCK input END_BLOCK

    $default  reduce using rule 17 ($@3)

    $@3  go to state 111


state 109

   24 def: PDEF name ':' name ',' name $@6 BEGIN_BLOCK . input END_BLOCK

    $default  reduce using rule 1 (input)

    input  go to state 112


state 110

   22 def: PDEF name ':' name $@5 BEGIN_BLOCK input END_BLOCK .

    $default  reduce using rule 22 (def)


state 111

   18 if: IF cond '~' $@2 BEGIN_BLOCK input END_BLOCK ELSE $@3 . BEGIN_BLOCK input END_BLOCK

    BEGIN_BLOCK  shift, and go to state 113


state 112

    2 input: input . command
   24 def: PDEF name ':' name ',' name $@6 BEGIN_BLOCK input . END_BLOCK

    IF         shift, and go to state 3
    END_BLOCK  shift, and go to state 114
    PDEF       shift, and go to state 4
    LOOP       shift, and go to state 5
    PRINT      shift, and go to state 6
    SET        shift, and go to state 7
    EXEC       shift, and go to state 8

    command  go to state 9
    if       go to state 10
    loop     go to state 11
    def      go to state 12
    exec     go to state 13


state 113

   18 if: IF cond '~' $@2 BEGIN_BLOCK input END_BLOCK ELSE $@3 BEGIN_BLOCK . input END_BLOCK

    $default  reduce using rule 1 (input)

    input  go to state 115


state 114

   24 def: PDEF name ':' name ',' name $@6 BEGIN_BLOCK input END_BLOCK .

    $default  reduce using rule 24 (def)


state 115

    2 input: input . command
   18 if: IF cond '~' $@2 BEGIN_BLOCK input END_BLOCK ELSE $@3 BEGIN_BLOCK input . END_BLOCK

    IF         shift, and go to state 3
    END_BLOCK  shift, and go to state 116
    PDEF       shift, and go to state 4
    LOOP       shift, and go to state 5
    PRINT      shift, and go to state 6
    SET        shift, and go to state 7
    EXEC       shift, and go to state 8

    command  go to state 9
    if       go to state 10
    loop     go to state 11
    def      go to state 12
    exec     go to state 13


state 116

   18 if: IF cond '~' $@2 BEGIN_BLOCK input END_BLOCK ELSE $@3 BEGIN_BLOCK input END_BLOCK .

    $default  reduce using rule 18 (if)
